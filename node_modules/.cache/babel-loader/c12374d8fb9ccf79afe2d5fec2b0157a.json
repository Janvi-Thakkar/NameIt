{"ast":null,"code":"const {\n  PREFIXES,\n  SUFFIXES\n} = require('./constants');\n/*\n * Adds suffixes and prefixes to words\n */\n\n\nfunction permutate(words) {\n  if (words.length === 0) {\n    return permutateFixes(PREFIXES, SUFFIXES);\n  } else {\n    return permutateFixes(PREFIXES, words).concat(permutateFixes(words, SUFFIXES));\n  }\n}\n/*\n * I'm feeling lucky\n */\n\n\nfunction permutateFixes(prefixes, suffixes) {\n  return prefixes.reduce((list, prefix) => {\n    return suffixes.reduce((list, suffix) => {\n      if (prefix === suffix) return list;\n      return list.concat([`${prefix} ${suffix}`]);\n    }, list);\n  }, []);\n}\n\nmodule.exports = {\n  permutate,\n  permutateFixes\n};","map":{"version":3,"sources":["C:/Users/hp1/node/name-it/node_modules/@rstacruz/startup-name-generator/lib/permutate.js"],"names":["PREFIXES","SUFFIXES","require","permutate","words","length","permutateFixes","concat","prefixes","suffixes","reduce","list","prefix","suffix","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBC,OAAO,CAAC,aAAD,CAAtC;AAEA;AACA;AACA;;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOC,cAAc,CAACN,QAAD,EAAWC,QAAX,CAArB;AACD,GAFD,MAEO;AACL,WAAOK,cAAc,CAACN,QAAD,EAAWI,KAAX,CAAd,CACJG,MADI,CACGD,cAAc,CAACF,KAAD,EAAQH,QAAR,CADjB,CAAP;AAED;AACF;AAED;AACA;AACA;;;AAEA,SAASK,cAAT,CAAyBE,QAAzB,EAAmCC,QAAnC,EAA6C;AAC3C,SAAOD,QAAQ,CAACE,MAAT,CAAgB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACvC,WAAOH,QAAQ,CAACC,MAAT,CAAgB,CAACC,IAAD,EAAOE,MAAP,KAAkB;AACvC,UAAID,MAAM,KAAKC,MAAf,EAAuB,OAAOF,IAAP;AACvB,aAAOA,IAAI,CAACJ,MAAL,CAAY,CAAG,GAAEK,MAAO,IAAGC,MAAO,EAAtB,CAAZ,CAAP;AACD,KAHM,EAGJF,IAHI,CAAP;AAID,GALM,EAKJ,EALI,CAAP;AAMD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AAAEZ,EAAAA,SAAF;AAAaG,EAAAA;AAAb,CAAjB","sourcesContent":["const { PREFIXES, SUFFIXES } = require('./constants')\n\n/*\n * Adds suffixes and prefixes to words\n */\n\nfunction permutate (words) {\n  if (words.length === 0) {\n    return permutateFixes(PREFIXES, SUFFIXES)\n  } else {\n    return permutateFixes(PREFIXES, words)\n      .concat(permutateFixes(words, SUFFIXES))\n  }\n}\n\n/*\n * I'm feeling lucky\n */\n\nfunction permutateFixes (prefixes, suffixes) {\n  return prefixes.reduce((list, prefix) => {\n    return suffixes.reduce((list, suffix) => {\n      if (prefix === suffix) return list\n      return list.concat([ `${prefix} ${suffix}` ])\n    }, list)\n  }, [])\n}\n\nmodule.exports = { permutate, permutateFixes }\n"]},"metadata":{},"sourceType":"script"}