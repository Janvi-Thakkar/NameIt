{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return factory(global, global.document);\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory(global, global.document);\n  } else {\n    global.normalize = factory(global, global.document);\n  }\n})(typeof window !== 'undefined' ? window : this, function (window, document) {\n  var charmap = require('./charmap.json');\n\n  var regex = null;\n  var current_charmap;\n  var old_charmap;\n\n  function normalize(str, custom_charmap) {\n    old_charmap = current_charmap;\n    current_charmap = custom_charmap || charmap;\n    regex = regex && old_charmap === current_charmap ? regex : buildRegExp(current_charmap);\n    return str.replace(regex, function (charToReplace) {\n      return current_charmap[charToReplace.charCodeAt(0)] || charToReplace;\n    });\n  }\n\n  function buildRegExp(charmap) {\n    return new RegExp('[' + Object.keys(charmap).map(function (code) {\n      return String.fromCharCode(code);\n    }).join(' ') + ']', 'g');\n  }\n\n  return normalize;\n});","map":{"version":3,"sources":["C:/Users/hp1/node/NameIt/node_modules/normalize-strings/index.js"],"names":["global","factory","define","amd","document","module","exports","normalize","window","charmap","require","regex","current_charmap","old_charmap","str","custom_charmap","buildRegExp","replace","charToReplace","charCodeAt","RegExp","Object","keys","map","code","String","fromCharCode","join"],"mappings":"AAAC,WAASA,MAAT,EAAiBC,OAAjB,EAA0B;AACzB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9CD,IAAAA,MAAM,CAAC,YAAW;AAChB,aAAOD,OAAO,CAACD,MAAD,EAASA,MAAM,CAACI,QAAhB,CAAd;AACD,KAFK,CAAN;AAGD,GAJD,MAIO,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AAC1DD,IAAAA,MAAM,CAACC,OAAP,GAAiBL,OAAO,CAACD,MAAD,EAASA,MAAM,CAACI,QAAhB,CAAxB;AACD,GAFM,MAEA;AACHJ,IAAAA,MAAM,CAACO,SAAP,GAAmBN,OAAO,CAACD,MAAD,EAASA,MAAM,CAACI,QAAhB,CAA1B;AACH;AACF,CAVA,EAUE,OAAOI,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,IAV3C,EAUiD,UAAUA,MAAV,EAAkBJ,QAAlB,EAA4B;AAC5E,MAAIK,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,eAAJ;AACA,MAAIC,WAAJ;;AAEA,WAASN,SAAT,CAAmBO,GAAnB,EAAwBC,cAAxB,EAAwC;AACtCF,IAAAA,WAAW,GAAGD,eAAd;AACAA,IAAAA,eAAe,GAAGG,cAAc,IAAIN,OAApC;AAEAE,IAAAA,KAAK,GAAIA,KAAK,IAAIE,WAAW,KAAKD,eAA1B,GAA6CD,KAA7C,GAAqDK,WAAW,CAACJ,eAAD,CAAxE;AAEA,WAAOE,GAAG,CAACG,OAAJ,CAAYN,KAAZ,EAAmB,UAASO,aAAT,EAAwB;AAChD,aAAON,eAAe,CAACM,aAAa,CAACC,UAAd,CAAyB,CAAzB,CAAD,CAAf,IAAgDD,aAAvD;AACD,KAFM,CAAP;AAGD;;AAED,WAASF,WAAT,CAAqBP,OAArB,EAA6B;AAC1B,WAAO,IAAIW,MAAJ,CAAW,MAAMC,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBc,GAArB,CAAyB,UAASC,IAAT,EAAe;AAAC,aAAOC,MAAM,CAACC,YAAP,CAAoBF,IAApB,CAAP;AAAmC,KAA5E,EAA8EG,IAA9E,CAAmF,GAAnF,CAAN,GAAgG,GAA3G,EAAgH,GAAhH,CAAP;AACD;;AAEF,SAAOpB,SAAP;AACD,CAhCA,CAAD","sourcesContent":["(function(global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return factory(global, global.document);\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory(global, global.document);\n  } else {\n      global.normalize = factory(global, global.document);\n  }\n} (typeof window !== 'undefined' ? window : this, function (window, document) {\n  var charmap = require('./charmap.json');\n  var regex = null;\n  var current_charmap;\n  var old_charmap;\n\n  function normalize(str, custom_charmap) {\n    old_charmap = current_charmap;\n    current_charmap = custom_charmap || charmap;\n\n    regex = (regex && old_charmap === current_charmap) ? regex : buildRegExp(current_charmap);\n\n    return str.replace(regex, function(charToReplace) {\n      return current_charmap[charToReplace.charCodeAt(0)] || charToReplace;\n    });\n  }\n\n  function buildRegExp(charmap){\n     return new RegExp('[' + Object.keys(charmap).map(function(code) {return String.fromCharCode(code); }).join(' ') + ']', 'g');\n   }\n\n  return normalize;\n}));\n"]},"metadata":{},"sourceType":"script"}